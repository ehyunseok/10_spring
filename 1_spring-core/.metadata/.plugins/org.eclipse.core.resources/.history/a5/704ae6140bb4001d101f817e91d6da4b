package com.greedy.section01.advice.annotation.aop;

import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;

@Component
@Aspect
public class AroundAttendingAdvice {

	/* 동일한 클래스 내의 포인트컷을 사용하는 것이라면 클래스명을 생략할 수 있다.
	 * 다른 클래스에서 가져와서 사용하는 경우에는 클래스명을 기재해야 하며 다른 패키지라면 패키지를 포함한 클래스명을 기재한다. */
	@Around("studentAroundPointcut()")
	public Object aroundAttending(ProceedingJoinPoint joinPoint) {
		
		
		
		return null;
	}
	
	/* void형 메서드로 작성하고 표현식을 작성한다. 메서드이 이름이 포인트컷의 이름이 된다. */
	@Pointcut("execution(* com.greedy.section01.advice.annotation..*(..))")
	private void studentAroundPointcut() {}
}
